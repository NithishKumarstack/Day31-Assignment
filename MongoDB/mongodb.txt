                                                           MONGODB DAY 1

First Create DataBase. 
Code:
     use products


And We Have Insert Data To Create The Collection, In Collection Inside Only We Have Data Has Document.(Here We Used product Has A Collection)
Code:
     db.product.insertMany([
    {
        "id": "1",
        "product_name": "Intelligent Fresh Chips",
        "product_price": 655.00,
        "product_material": "Concrete",
        "product_color": "mint green"
    },
    {
        "id": "2",
        "product_name": "Practical Fresh Sausages",
        "product_price": 911.0,
        "product_material": "Cotton",
        "product_color": "indigo"
    },
    {
        "id": "3",
        "product_name": "Refined Steel Car",
        "product_price": 690.00,
        "product_material": "Rubber",
        "product_color": "gold"
    },
    {
        "id": "4",
        "product_name": "Gorgeous Plastic Pants",
        "product_price": 492.00,
        "product_material": "Soft",
        "product_color": "plum"
    },
    {
        "id": "5",
        "product_name": "Sleek Cotton Chair",
        "product_price": 33.00,
        "product_material": "Fresh",
        "product_color": "black"
    },
    {
        "id": "6",
        "product_name": "Awesome Wooden Towels",
        "product_price": 474.00,
        "product_material": "Plastic",
        "product_color": "orange"
    },
    {
        "id": "7",
        "product_name": "Practical Soft Shoes",
        "product_price": 500.00,
        "product_material": "Rubber",
        "product_color": "pink"
    },
    {
        "id": "8",
        "product_name": "Incredible Steel Hat",
        "product_price": 78.00,
        "product_material": "Rubber",
        "product_color": "violet"
    },
    {
        "id": "9",
        "product_name": "Awesome Wooden Ball",
        "product_price": 28.00,
        "product_material": "Soft",
        "product_color": "azure"
    },
    {
        "id": "10",
        "product_name": "Generic Wooden Pizza",
        "product_price": 84.00,
        "product_material": "Frozen",
        "product_color": "indigo"
    },
    {
        "id": "11",
        "product_name": "Unbranded Wooden Cheese",
        "product_price":26.00,
        "product_material": "Soft",
        "product_color": "black"
    },
    {
        "id": "12",
        "product_name": "Unbranded Plastic Salad",
        "product_price": 89.00,
        "product_material": "Wooden",
        "product_color": "pink"
    },
    {
        "id": "13",
        "product_name": "Gorgeous Cotton Keyboard",
        "product_price": 37.00,
        "product_material": "Concrete",
        "product_color": "sky blue"
    },
    {
        "id": "14",
        "product_name": "Incredible Steel Shirt",
        "product_price": 54.00,
        "product_material": "Metal",
        "product_color": "white"
    },
    {
        "id": "15",
        "product_name": "Ergonomic Cotton Hat",
        "product_price": 43.00,
        "product_material": "Rubber",
        "product_color": "mint green"
    },
    {
        "id": "16",
        "product_name": "Small Soft Chair",
        "product_price": 47.00,
        "product_material": "Cotton",
        "product_color": "teal"
    },
    {
        "id": "17",
        "product_name": "Incredible Metal Car",
        "product_price":36.00,
        "product_material": "Fresh",
        "product_color": "indigo"
    },
    {
        "id": "18",
        "product_name": "Licensed Plastic Bacon",
        "product_price":88.00,
        "product_material": "Steel",
        "product_color": "yellow"
    },
    {
        "id": "19",
        "product_name": "Intelligent Cotton Chips",
        "product_price": 46.00,
        "product_material": "Soft",
        "product_color": "azure"
    },
    {
        "id": "20",
        "product_name": "Handcrafted Wooden Bacon",
        "product_price": 36.00,
        "product_material": "Concrete",
        "product_color": "lime"
    },
    {
        "id": "21",
        "product_name": "Unbranded Granite Chicken",
        "product_price": 90.00,
        "product_material": "Metal",
        "product_color": "gold"
    },
    {
        "id": "22",
        "product_name": "Ergonomic Soft Hat",
        "product_price": 99.00,
        "product_material": "Rubber",
        "product_color": "black"
    },
    {
        "id": "23",
        "product_name": "Intelligent Steel Pizza",
        "product_price": 95.00,
        "product_material": "Cotton",
        "product_color": "azure"
    },
    {
        "id": "24",
        "product_name": "Tasty Rubber Cheese",
        "product_price":47.00,
        "product_material": "Frozen",
        "product_color": "orchid"
    },
    {
        "id": "25",
        "product_name": "Licensed Steel Car",
        "product_price":20.00,
        "product_material": "Cotton",
        "product_color": "indigo"
    }
])

Now We Have A DataBase With Collection Of Document.

When We Insert The Data We Get The Acknowledged Has: (This Like Below Mentioned) 
 Output: 
      {
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("65771d55542a820101c4d2e2"),
    '1': ObjectId("65771d55542a820101c4d2e3"),
    '2': ObjectId("65771d55542a820101c4d2e4"),
    '3': ObjectId("65771d55542a820101c4d2e5"),
    '4': ObjectId("65771d55542a820101c4d2e6"),
    '5': ObjectId("65771d55542a820101c4d2e7"),
    '6': ObjectId("65771d55542a820101c4d2e8"),
    '7': ObjectId("65771d55542a820101c4d2e9"),
    '8': ObjectId("65771d55542a820101c4d2ea"),
    '9': ObjectId("65771d55542a820101c4d2eb"),
    '10': ObjectId("65771d55542a820101c4d2ec"),
    '11': ObjectId("65771d55542a820101c4d2ed"),
    '12': ObjectId("65771d55542a820101c4d2ee"),
    '13': ObjectId("65771d55542a820101c4d2ef"),
    '14': ObjectId("65771d55542a820101c4d2f0"),
    '15': ObjectId("65771d55542a820101c4d2f1"),
    '16': ObjectId("65771d55542a820101c4d2f2"),
    '17': ObjectId("65771d55542a820101c4d2f3"),
    '18': ObjectId("65771d55542a820101c4d2f4"),
    '19': ObjectId("65771d55542a820101c4d2f5"),
    '20': ObjectId("65771d55542a820101c4d2f6"),
    '21': ObjectId("65771d55542a820101c4d2f7"),
    '22': ObjectId("65771d55542a820101c4d2f8"),
    '23': ObjectId("65771d55542a820101c4d2f9"),
    '24': ObjectId("65771d55542a820101c4d2fa")
  }
}

Now We Do The Requirements...

Question 1: Find all the information about each products?

Here We Use find() Function To Get All information About Each products

Code:  db.product.find({}) 

Output:  We Will Get Rest Of The All Data...

Question 2: Find the product price which are between 400 to 800?

Here We Use Aggregate Operators $gte(Greater Than - Operator) And $lte(Lesser Than - Operator)

Code:  db.product.find({
  "product_price": {
    $gte: 400,
    $lte: 800
  }
})

Output: We Get Output Of 5 Product List;
{
  _id: ObjectId("65771d55542a820101c4d2e2"),
  id: '1',
  product_name: 'Intelligent Fresh Chips',
  product_price: 655,
  product_material: 'Concrete',
  product_color: 'mint green'
}
{
  _id: ObjectId("65771d55542a820101c4d2e4"),
  id: '3',
  product_name: 'Refined Steel Car',
  product_price: 690,
  product_material: 'Rubber',
  product_color: 'gold'
}
{
  _id: ObjectId("65771d55542a820101c4d2e5"),
  id: '4',
  product_name: 'Gorgeous Plastic Pants',
  product_price: 492,
  product_material: 'Soft',
  product_color: 'plum'
}
{
  _id: ObjectId("65771d55542a820101c4d2e7"),
  id: '6',
  product_name: 'Awesome Wooden Towels',
  product_price: 474,
  product_material: 'Plastic',
  product_color: 'orange'
}
{
  _id: ObjectId("65771d55542a820101c4d2e8"),
  id: '7',
  product_name: 'Practical Soft Shoes',
  product_price: 500,
  product_material: 'Rubber',
  product_color: 'pink'
}

Question 3: Find the product price which are not between 400 to 600?

Here We Use Same Operator But Small Change With Using The Operator With $not(not-Operator)

Code: db.product.find({
  "product_price": {
    $not: {
      $gte: 400,
      $lte: 600
    }
  }
})

Output: We Get Output Of 22 Product List;
{
  _id: ObjectId("65771d55542a820101c4d2e2"),
  id: '1',
  product_name: 'Intelligent Fresh Chips',
  product_price: 655,
  product_material: 'Concrete',
  product_color: 'mint green'
}
{
  _id: ObjectId("65771d55542a820101c4d2e3"),
  id: '2',
  product_name: 'Practical Fresh Sausages',
  product_price: 911,
  product_material: 'Cotton',
  product_color: 'indigo'
}
{
  _id: ObjectId("65771d55542a820101c4d2e4"),
  id: '3',
  product_name: 'Refined Steel Car',
  product_price: 690,
  product_material: 'Rubber',
  product_color: 'gold'
}
{
  _id: ObjectId("65771d55542a820101c4d2e6"),
  id: '5',
  product_name: 'Sleek Cotton Chair',
  product_price: 33,
  product_material: 'Fresh',
  product_color: 'black'
}
{
  _id: ObjectId("65771d55542a820101c4d2e9"),
  id: '8',
  product_name: 'Incredible Steel Hat',
  product_price: 78,
  product_material: 'Rubber',
  product_color: 'violet'
}
{
  _id: ObjectId("65771d55542a820101c4d2ea"),
  id: '9',
  product_name: 'Awesome Wooden Ball',
  product_price: 28,
  product_material: 'Soft',
  product_color: 'azure'
}
{
  _id: ObjectId("65771d55542a820101c4d2eb"),
  id: '10',
  product_name: 'Generic Wooden Pizza',
  product_price: 84,
  product_material: 'Frozen',
  product_color: 'indigo'
}
{
  _id: ObjectId("65771d55542a820101c4d2ec"),
  id: '11',
  product_name: 'Unbranded Wooden Cheese',
  product_price: 26,
  product_material: 'Soft',
  product_color: 'black'
}
{
  _id: ObjectId("65771d55542a820101c4d2ed"),
  id: '12',
  product_name: 'Unbranded Plastic Salad',
  product_price: 89,
  product_material: 'Wooden',
  product_color: 'pink'
}
{
  _id: ObjectId("65771d55542a820101c4d2ee"),
  id: '13',
  product_name: 'Gorgeous Cotton Keyboard',
  product_price: 37,
  product_material: 'Concrete',
  product_color: 'sky blue'
}
{
  _id: ObjectId("65771d55542a820101c4d2ef"),
  id: '14',
  product_name: 'Incredible Steel Shirt',
  product_price: 54,
  product_material: 'Metal',
  product_color: 'white'
}
{
  _id: ObjectId("65771d55542a820101c4d2f0"),
  id: '15',
  product_name: 'Ergonomic Cotton Hat',
  product_price: 43,
  product_material: 'Rubber',
  product_color: 'mint green'
}
{
  _id: ObjectId("65771d55542a820101c4d2f1"),
  id: '16',
  product_name: 'Small Soft Chair',
  product_price: 47,
  product_material: 'Cotton',
  product_color: 'teal'
}
{
  _id: ObjectId("65771d55542a820101c4d2f2"),
  id: '17',
  product_name: 'Incredible Metal Car',
  product_price: 36,
  product_material: 'Fresh',
  product_color: 'indigo'
}
{
  _id: ObjectId("65771d55542a820101c4d2f3"),
  id: '18',
  product_name: 'Licensed Plastic Bacon',
  product_price: 88,
  product_material: 'Steel',
  product_color: 'yellow'
}
{
  _id: ObjectId("65771d55542a820101c4d2f4"),
  id: '19',
  product_name: 'Intelligent Cotton Chips',
  product_price: 46,
  product_material: 'Soft',
  product_color: 'azure'
}
{
  _id: ObjectId("65771d55542a820101c4d2f5"),
  id: '20',
  product_name: 'Handcrafted Wooden Bacon',
  product_price: 36,
  product_material: 'Concrete',
  product_color: 'lime'
}
{
  _id: ObjectId("65771d55542a820101c4d2f6"),
  id: '21',
  product_name: 'Unbranded Granite Chicken',
  product_price: 90,
  product_material: 'Metal',
  product_color: 'gold'
}
{
  _id: ObjectId("65771d55542a820101c4d2f7"),
  id: '22',
  product_name: 'Ergonomic Soft Hat',
  product_price: 99,
  product_material: 'Rubber',
  product_color: 'black'
}
{
  _id: ObjectId("65771d55542a820101c4d2f8"),
  id: '23',
  product_name: 'Intelligent Steel Pizza',
  product_price: 95,
  product_material: 'Cotton',
  product_color: 'azure'
}
{
  _id: ObjectId("65771d55542a820101c4d2f9"),
  id: '24',
  product_name: 'Tasty Rubber Cheese',
  product_price: 47,
  product_material: 'Frozen',
  product_color: 'orchid'
}
{
  _id: ObjectId("65771d55542a820101c4d2fa"),
  id: '25',
  product_name: 'Licensed Steel Car',
  product_price: 20,
  product_material: 'Cotton',
  product_color: 'indigo'
}

Question 4: List the four product which are grater than 500 in price?

Here We Use Two Methods To Get The Output, One Is $gte(Grater Than_Operator) And Another One Is 
limit()(This Function will Ensures That Only Specific Value Documents Are Return)

Code: db.product.find({
  "product_price": {
    $gte: 500
  }
}).limit(4)

Output: It Show Which First 4 Products Are Greater Than 500 Price.
{
  _id: ObjectId("65771d55542a820101c4d2e2"),
  id: '1',
  product_name: 'Intelligent Fresh Chips',
  product_price: 655,
  product_material: 'Concrete',
  product_color: 'mint green'
}
{
  _id: ObjectId("65771d55542a820101c4d2e3"),
  id: '2',
  product_name: 'Practical Fresh Sausages',
  product_price: 911,
  product_material: 'Cotton',
  product_color: 'indigo'
}
{
  _id: ObjectId("65771d55542a820101c4d2e4"),
  id: '3',
  product_name: 'Refined Steel Car',
  product_price: 690,
  product_material: 'Rubber',
  product_color: 'gold'
}
{
  _id: ObjectId("65771d55542a820101c4d2e8"),
  id: '7',
  product_name: 'Practical Soft Shoes',
  product_price: 500,
  product_material: 'Rubber',
  product_color: 'pink'
}

Question 5: Find the product name and product material of each products?

Code:db.product.find({}, { "product_name": 1, "product_material": 1, "_id": 0 })

Output: We Use Same find() To Get All Products_Name And Product_Material, There Is Boolean Values
[Here Use 1 As A Value You Will Get That Document Or Else Use 0 As A Value You Wont Get That Document]
{
  product_name: 'Intelligent Fresh Chips',
  product_material: 'Concrete'
}
{
  product_name: 'Practical Fresh Sausages',
  product_material: 'Cotton'
}
{
  product_name: 'Refined Steel Car',
  product_material: 'Rubber'
}

Question 6: Find the product with a row id of 10?

Here We Same As Well find()(Function To Get The Row Of Id Number 10)
Code: db.product.find({ "id": "10" })

Output: We Get That Specific Document
{
  _id: ObjectId("65771d55542a820101c4d2eb"),
  id: '10',
  product_name: 'Generic Wooden Pizza',
  product_price: 84,
  product_material: 'Frozen',
  product_color: 'indigo'
}

Question 7: Find only the product name and product material?

Here We Use find()(Function To Get Products_Name And Product_Material Of Row Id Of 10)
Code: db.product.find({ "id": "10" },{ "product_name": 1, "product_material": 1, "_id": 0 })

Output: We Get The Document Of Products_Name And Product_Material
{
  product_name: 'Generic Wooden Pizza',
  product_material: 'Frozen'
}

Question 8: Find all products which contain the value of soft in product material?

Here We Use $regex Operator To Specify Field And Value And We Use $Option(Operator) To Specify
Code: db.product.find({
  "product_material": /Soft/i
})

Output: We Get 4 Documents 
{
  _id: ObjectId("65771d55542a820101c4d2e5"),
  id: '4',
  product_name: 'Gorgeous Plastic Pants',
  product_price: 492,
  product_material: 'Soft',
  product_color: 'plum'
}
{
  _id: ObjectId("65771d55542a820101c4d2ea"),
  id: '9',
  product_name: 'Awesome Wooden Ball',
  product_price: 28,
  product_material: 'Soft',
  product_color: 'azure'
}
{
  _id: ObjectId("65771d55542a820101c4d2ec"),
  id: '11',
  product_name: 'Unbranded Wooden Cheese',
  product_price: 26,
  product_material: 'Soft',
  product_color: 'black'
}
{
  _id: ObjectId("65771d55542a820101c4d2f4"),
  id: '19',
  product_name: 'Intelligent Cotton Chips',
  product_price: 46,
  product_material: 'Soft',
  product_color: 'azure'
}

Question 9: Find products which contain product color indigo  and product price 492.00?

Here We Use $or(Operator To Satisfiy The BOth Condition)
Code:db.product.find({
  $or: [
    { "product_color": "indigo" },
    { "product_price": 492.00 }
  ]
})

Output: We Get 5 Documents
{
  _id: ObjectId("65771d55542a820101c4d2e3"),
  id: '2',
  product_name: 'Practical Fresh Sausages',
  product_price: 911,
  product_material: 'Cotton',
  product_color: 'indigo'
}
{
  _id: ObjectId("65771d55542a820101c4d2e5"),
  id: '4',
  product_name: 'Gorgeous Plastic Pants',
  product_price: 492,
  product_material: 'Soft',
  product_color: 'plum'
}
{
  _id: ObjectId("65771d55542a820101c4d2eb"),
  id: '10',
  product_name: 'Generic Wooden Pizza',
  product_price: 84,
  product_material: 'Frozen',
  product_color: 'indigo'
}
{
  _id: ObjectId("65771d55542a820101c4d2f2"),
  id: '17',
  product_name: 'Incredible Metal Car',
  product_price: 36,
  product_material: 'Fresh',
  product_color: 'indigo'
}
{
  _id: ObjectId("65771d55542a820101c4d2fa"),
  id: '25',
  product_name: 'Licensed Steel Car',
  product_price: 20,
  product_material: 'Cotton',
  product_color: 'indigo'
}

-------------------------------------------------------------------------------------------------------------------------------------------